 
 /*
 // UberTypograf rules for Photoshop
 // Правила типографа для Фотошопа
 // v. 1.1
 */
 
 /*
 //
 // ВАЖНО!
 //
 // Из-за специфики фотошопа правила поделены на 3 части:
 //
 // firstStep — собраны правила влияющие на количество знаков в строке. 
 // Условно, если в слое мы имеем текст:
 // <p>Привет, я — <strong>Василий </strong>Пупкин</p>
 // то firstStep будет вызван 3 раза для каждого элемента массива:
 // ["Привет, я — ", "Василий ", "Пупкин"]
 //
 // secondStep — собраны правила НЕ влияющие на количество знаков.
 // Тут текст проверяется уже целиком, непосредственно перед возвращением обратно в слой.
 // В этой части важно не менять количество и порядок знаков.
 //
 // noBreakRules — регулярка для проставления неразрывных пробелов.
 //
 */
 
 /*
 //
 // Проблемы
 // - ломает ссылки в тексте (ставит пробелы после точек)
 // - не умеет типографировать номера телефонов
 //
 */
 
 function firstStep(text) {

        // Тире
        tmp = new RegExp('\\-|\\‐|\\−|\\‒|\\⁃|\\–|\\—|\\―', "g"); // Унифицируем
        text = text.replace(tmp, "-");
        text = text.replace(/(\S)(\s+)(\-)(\s+)(\S)/g, "$1 — $5"); // длинное тире
        text = text.replace(/(\S)(\s?)(\-)(\s?)(это)/gi, "$1 — $5"); // перед «это»
        text = text.replace(/(\n|\r|)(\s?)(\-)/g, "$1— "); // в начале строки (прямая речь)

        // Символы
        text = text.replace(/(\(c\))|(\(с\))/gi, "©");
        text = text.replace(/\s?\(r\)/gi, " ®");
        text = text.replace(/\s?\(d\)/gi, "°");
        text = text.replace(/\s?(\(tm\))|\s?(\(тм\))/gi, "™");
        text = text.replace(/\<\-/g, "←");
        text = text.replace(/\-\>/g, "→");
        text = text.replace(/(\+-)|(\+\/\-)/g, "±");
        text = text.replace(/(\!=)|(\!\=)/g, "≠");

        // Дроби
        text = text.replace(/(\D)(1)(\s?)(\/)(\s?)(2)(\D)/g, "$1$3½$5$7");
        text = text.replace(/(\D)(1)(\s?)(\/)(\s?)(3)(\D)/g, "$1$3⅓$5$7");
        text = text.replace(/(\D)(2)(\s?)(\/)(\s?)(3)(\D)/g, "$1$3⅔$5$7");
        text = text.replace(/(\D)(1)(\s?)(\/)(\s?)(4)(\D)/g, "$1$3¼$5$7");
        text = text.replace(/(\D)(3)(\s?)(\/)(\s?)(4)(\D)/g, "$1$3¾$5$7");

        // Пробелы до и после скобок
        text = text.replace(/(\S)(\()/g, "$1 $2");
        text = text.replace(/(\))(\S)/g, "$1 $2");

        // Убирает пробелы внутри скобок
        text = text.replace(/(\s)(\))/g, "$2");
        text = text.replace(/(\()(\s)/g, "$1");

        // Формулы
        text = text.replace(/(\d)\s?(x|х)\s?(\d)/gi, "$1 × $3");
        text = text.replace(/(\d)\s?(\-)\s?(\d+)\s?(\=|≠|≈)/g, "$1 − $3 $4");
        text = text.replace(/(\d)\s?(\+|±|\*|×)\s?(\d)е/g, "$1 $2 $3");
        text = text.replace(/(\d)\s?(\/)\s?(\d)\s?(\=|≠|≈)/g, "$1 ÷ $3 $4");
        text = text.replace(/(\d)\s?(\=|≠|≈)\s?(.)/g, "$1 $2 $3");

        // Дефисы в словах с частицами
        text = text.replace(/(\s|^|\n|\r|)(где|когда|кто|что|как|чем|чём|чего)\s?-?\s?(то|либо|нибудь)([^:])(\s?)/gi, "$1$2-$3$4");
        text = text.replace(/(\s|^|\n|\r|)(кое|кой)\s?\-?\s?(\S{3,})/gi, "$1$2-$3");
        text = text.replace(/(\S)(\s+)(-?)(\s?)(ка|де|кась)(\s+|,|\.|;|:|\!|\?)/gi, "$1-$5$6");
        text = text.replace(/(\s|^|\n|\r|)(из)(\s+)(за|под)/gi, "$1$2-$4");

        /*// Тире в телефонах на цифорвое тире
        // !!! Зависает фотошоп, если в тексте встречается «1980-е» или «80-х»
        var found = text.match(/((8|\+7)[\- ]?)?(\(?\d{3}\)?[\- ]?)?[\d\- ]{7,10}/g);
        text = text.replace(/(\+?)( )?(8)( |-)?(\()?( )?(\d{1,4})( )?(\))?( |-)?( )?(\d{1,3})( )?( |-)?( )?(\d{1,3})( )?( |-)?( )?(\d{1,3})/g, "$3 $7 $12–$16–$20");

        // Килер-фича, убирает скобочки :D
        phones = new Array("495", "499", "903", "905", "906", "909", "951", "953", "960", "961", "962", "963", "964", "965", "966", "967", "968", "910", "911", "912", "913", "914", "915", "916", "917", "918", "919", "980", "981", "982", "983", "984", "985", "987", "988", "989", "920", "921", "922", "923", "924", "925", "926", "927", "928", "929", "999");
        for (y = 0; y < phones.length; y++) {
            tmp = new RegExp("[(](" + phones[y] + ")[)]", "g");
            text = text.replace(tmp, "$1");
        }*/

        // Запятые перед а, но
        text = text.replace(/(\S)\s+(а|но)\s+(\S)/g, "$1, $2 $3");

        // Убираем точки после млн, млрд, трлн
        text = text.replace(/(\d?)\s?(млн|млрд|трлн)(\.?)/gi, "$1 $2 ");

        // Многоточкие
        text = text.replace(/(\.){4,}/g, "...");
        
        // Двойные точки
        text = text.replace(/([^\.])\.\.(\s)/g, "$1.$2");

        // Двойные и более запятые, двоеточия и точки с запятой
        text = text.replace(/(\,|\:|\;){2,}/g, "$1");

        // Убирает пробел 100°
        text = text.replace(/(\d)\s?(°)/g, "$1$2");

        // Ставит пробелы между числом и единицей измерения
        text = text.replace(/(\d+)\s?(°С|°C|%|‰|\$|€|₽|dpi|lpi|px|pt|mm|cm|m|km|мм|см|м|км|кВт|kW|тыс\.|р\.|руб\.|долл\.)(\s?)/gi, "$1 $2$3");

        // Ставит пробелы § IV, № 124
        text = text.replace(/(§|№)\s?([0-9A-Z])/gi, "$1 $2");

        // Убирает пробелы $100, €100
        text = text.replace(/(\$|€)( ?)(\d+)/g, "$1$3");

        // !!!!!!!!!!!!!!!!!!!???????????????
        text = text.replace(/(\?){2,}/g, "$1");
        text = text.replace(/(\!){2,}/g, "$1");

        // Заменяет р. на ₽
        text = text.replace(/(\d)(\s?)(руб|р)\. *([0-9А-ЯЁ])/gi, "$1 ₽. $4"); // В предложении
        text = text.replace(/(\d)(\s?)(руб|р)\. *([0-9A-Z])/gi, "$1 ₽. $4");
        text = text.replace(/(\d)(\s?)(руб|р)\.?(\s?)/gi, "$1 ₽$4"); // Одинокий рубль без точки

        // Цифры на разряды 10 000
        text = text.replace(/( |^|\n|\r|)(\d{1,3}) ?(\d{3}) ?(\d{3}) ?(\d{3}) ?(\d{3}) ?(\d{3}) ?(\d{3}) ?(\d{3})/g, "$1$2 $3 $4 $5 $6 $7 $8 $9");
        text = text.replace(/( |^|\n|\r|)(\d{1,3}) ?(\d{3}) ?(\d{3}) ?(\d{3}) ?(\d{3}) ?(\d{3}) ?(\d{3})/g, "$1$2 $3 $4 $5 $6 $7 $8");
        text = text.replace(/( |^|\n|\r|)(\d{1,3}) ?(\d{3}) ?(\d{3}) ?(\d{3}) ?(\d{3}) ?(\d{3})/g, "$1$2 $3 $4 $5 $6 $7");
        text = text.replace(/( |^|\n|\r|)(\d{1,3}) ?(\d{3}) ?(\d{3}) ?(\d{3}) ?(\d{3})/g, "$1$2 $3 $4 $5 $6");
        text = text.replace(/( |^|\n|\r|)(\d{1,3}) ?(\d{3}) ?(\d{3}) ?(\d{3})/g, "$1$2 $3 $4 $5");
        text = text.replace(/( |^|\n|\r|)(\d{1,3}) ?(\d{3}) ?(\d{3})/g, "$1$2 $3 $4");
        text = text.replace(/( |^|\n|\r|)(\d{2,3}) ?(\d{3})/g, "$1$2 $3");

        // Табы превращаем в пробел
        text = text.replace(/(\	){1,}/g, " ");

        // Двойные пробелы
        text = text.replace(/( | ){2,}/g, "$1");

        // Убрать пробел с новой строки
        text = text.replace(/(\n|\r|)( ){1,}(\S+)/g, "$1$3");

        // Пробелы после знаков препинания
        text = text.replace(/([^\d])(\s?)(\.|\,|\:|\;|\!|\?)( ?)([^\.|\,|\:|\;|\!|\?|»|”|’|\d|ru|com|ру|рф|net|org|su| ])/g, "$1$3 $5");
        text = text.replace(/(\S)(\s?)(\.|\,|\:|\;|\!|\?)[ ]?(\n|\r|)/g, "$1$3$4");
        text = text.replace(/(\S)(\s?)(\.|\,|\:|\;|\!|\?)$/g, "$1$3");

        return text
    }

    function secondStep(text) {
    
        // Чиним длинное тире
        text = text.replace(/(\S) (\-) (\S)/g, "$1 — $3");

        // Квадраты и кубы            
        text = text.replace(/\s?(мкм|мм|см|дм|м|км|µm|mm|cm|m|km)\^?2/gi, " $1²");
        text = text.replace(/\s?(мкм|мм|см|дм|м|км|µm|mm|cm|m|km)\^?3/gi, " $1³");

        // Кавычки
        tmp = new RegExp('«|»|"|„|“|”|’|‘', "g"); // Унифицируем
        text = text.replace(tmp, "»");
        tmp = new RegExp("'", "g"); // Одиночную ещё
        text = text.replace(tmp, "»");
        // Снаружи v1.0
        /*text = text.replace(/( *)»(\S(?=[А-ЯЁ]))/gi, "$1«$2");
        text = text.replace(/( *)»(\S(?=[A-Z]))/gi, "$1«$2");
        text = text.replace(/( *)»(\S(?=[0-9]))/gi, "$1«$2");*/
        // Снаружи v1.1
        text = text.replace(/( )»([0-9A-ZА-ЯЁ]|\r|\n||$)/gi, "$1«$2");
        
        // Внутри
        ins = 0;
        while (ins < 30) {
            text = text.replace(/«([^«»]*)«([^«»]*)»/g, "«$1„$2“");
            ins++;
        }

        // На английском внутри
        text = text.replace(/„([A-z])/g, "‘$1");
        text = text.replace(/([A-z](.*))“/g, "$1’");
        // На английском снаружи
        text = text.replace(/«([A-z])/g, "“$1");
        text = text.replace(/([A-z])»/g, "$1”");
        // Восстанавливает англйиские сокращения, like don't
        text = text.replace(/([A-z])”([A-z])/g, "$1’$2");
        // Восстанавливает «500 cats”
        text = text.replace(/«(\d+( )[A-z])/g, "“$1");
        text = text.replace(/([A-z]( )\d+)»/g, "$1”");

        // .»  →  ».
        text = text.replace(/\.»/g, "»\.");

        // !? → ?!
        text = text.replace(/\!\?/g, "?!");

        return text
    }
    
    var noBreakRules = new RegExp('(( |^|\\(|«|„)(всё так же|так же|а ведь|в виде|в лице|в роли|в силу|вблизи|вглубь|вдогон|взамен|вместо|внутри|внутрь|вокруг|где-то|докуда|значит|из-под|именно|как бы|как то|как-то|кругом|назади|насчёт|не без|нежели|однако|откуда|оттого|отчего|передо|поверх|позади|помимо|по-над|понеже|по-под|потому|почему|правда|прежде|притом|причём|просто|против|пускай|сверху|сквозь|словно|спустя|сродни|теперь|только|благо|будто|ввиду|вдоль|вкруг|внизу|возле|вроде|вслед|ежели|зачем|и\\/или|из-за|иначе|каков|какой|когда|кроме|между|назад|не за|около|округ|перед|подле|по-за|после|почём|предо|пусть|путём|равно|разве|ровно|сверх|свыше|сзади|снизу|среди|средь|также|то ли|через|чтобы|штобы|якобы|а то|ажно|а-ля|безо|близ|ведь|дабы|даже|едва|если|зато|итак|кабы|коли|коль|куда|либо|лишь|мимо|надо|не в|ниже|обок|подо|пока|пред|ради|тоже|хоть|хотя|чрез|чтоб|чуть|штоб|абы|аки|ако|али|аль|без|вне|всё|где|для|еже|ибо|изо|или|иль|им\\.|как|меж|над|обо|ото|под|при|про|раз|чем|что|но|из|их|на|не|ни|за|во|со|да|по|об|до|а|у|с|в|к|и|о)( |, ))|(\\d\\s(янв|фев|мар|апр|май|июн|июл|авг|сен|окт|ноя|дек|час|мин|сек))', 'ig');
